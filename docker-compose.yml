version: '3.8'

services:
  nginx:
    container_name: engineering-hub-nginx
    build: ./nginx # Лучше использовать build, чтобы конфиг запекался в образ
    restart: unless-stopped
    ports:
      - "80:80"
      # - "443:443" # Раскомментируете, когда будете настраивать SSL
    volumes:
      # Этот volume нужен, чтобы наш обновленный nginx.conf сразу применился
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend

  frontend:
    container_name: engineering-hub-frontend
    build: ./frontend
    restart: unless-stopped
    volumes:
      # [ВОЗВРАЩЕНО!] Подключаем правильный nginx.conf для SPA
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  backend:
    container_name: engineering-hub-backend
    build: ./backend
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./backend:/app # Для разработки, чтобы код обновлялся без пересборки
    depends_on:
      - redis
      - db # [ВОЗВРАЩЕНО!] Бэкенд зависит от БД

  # [ВОЗВРАЩЕНО!] Сервис базы данных
  db:
    container_name: engineering-hub-db
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: \${POSTGRES_USER}
      POSTGRES_PASSWORD: \${POSTGRES_PASSWORD}
      POSTGRES_DB: \${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: engineering-hub-redis
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning

  worker:
    container_name: engineering-hub-worker
    build: ./worker
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./worker:/app
      - ./backend/kb_service:/app/kb_service
    depends_on:
      - redis
      - db # Воркеру тоже может понадобиться доступ к БД

volumes:
  postgres_data:
    name: engineering-hub_postgres_data
