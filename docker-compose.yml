version: '3.8'

services:
  nginx:
    container_name: engineering-hub-nginx
    build: ./nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend

  frontend:
    container_name: engineering-hub-frontend
    build: ./frontend
    restart: unless-stopped
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  backend:
    container_name: engineering-hub-backend
    build: ./backend
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./backend:/app
      - ./config.json:/app/config.json  # <--- ИЗМЕНЕНИЕ ЗДЕСЬ
    depends_on:
      - redis
      - db

  db:
    container_name: engineering-hub-db
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: engineering-hub-redis
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning

  worker:
    container_name: engineering-hub-worker
    build: ./worker
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./worker:/app
      - ./backend/kb_service:/app/kb_service
      - ./config.json:/app/config.json  # <--- И ИЗМЕНЕНИЕ ЗДЕСЬ
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
    name: engineering-hub_postgres_data
