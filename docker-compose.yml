version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: engineering-hub-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Порт 5432 не нужно выставлять наружу, если к БД не подключаются извне сети Docker.

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: engineering-hub-backend
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      # Этот volume нужен для разработки, чтобы изменения кода сразу применялись без пересборки.
      - ./backend:/app
      - ./chat_histories:/app/chat_histories
      - ./mock_disk:/app/mock_disk

  frontend:
    build: ./frontend
    container_name: engineering-hub-frontend
    # [ИСПРАВЛЕНО] Добавляем restart, чтобы сервис был более устойчив.
    restart: unless-stopped
    depends_on:
      - backend
    # Том с конфигом Nginx для фронтенда здесь больше не нужен,
    # так как Dockerfile фронтенда уже копирует статику в образ Nginx.
    # Если у вас отдельный Dockerfile для frontend, который собирает статику,
    # и отдельный образ nginx, который ее использует, то все в порядке.
    # Судя по вашим логам сборки, у вас многоступенчатая сборка, что правильно.

  nginx:
    build: ./nginx
    container_name: engineering-hub-nginx
    ports:
      # Системный Nginx обращается на 127.0.0.1:8081, а этот порт маппится на порт 80 внутри контейнера.
      - "8081:80"
    volumes:
      - ./nginx/wait-for-it.sh:/app/wait-for-it.sh
    depends_on:
      - backend
      - frontend
    command: >
      sh -c "
        chmod +x /app/wait-for-it.sh && \
        /app/wait-for-it.sh backend:8000 --timeout=60 --strict -- \
        nginx -g 'daemon off;'
      "

volumes:
  postgres_data:
    name: engineering-hub_postgres_data
