version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: engineering-hub-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: \${POSTGRES_USER}
      POSTGRES_PASSWORD: \${POSTGRES_PASSWORD}
      POSTGRES_DB: \${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Порт 5432 не нужно выставлять наружу, если вы не подключаетесь к БД с хост-машины
    # ports:
    #   - "5432:5432"

  backend:
    build:
      context: ./backend
      # Указываем путь к Dockerfile явно, если он не в корне ./backend
      dockerfile: Dockerfile
    container_name: engineering-hub-backend
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env
    # Этот volume нужен для разработки, чтобы изменения кода сразу применялись. Для продакшена его можно убрать.
    volumes:
      - ./backend:/app
      - ./chat_histories:/app/chat_histories
      - ./mock_disk:/app/mock_disk

  frontend:
    build: ./frontend
    container_name: engineering-hub-frontend
    restart: unless-stopped
    depends_on:
      - backend
    volumes:
      # ВАЖНО: Подключаем правильный, только что созданный конфиг для фронтенда!
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  nginx:
    build: ./nginx
    container_name: engineering-hub-nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      # Системный Nginx обращается на 127.0.0.1:8081, а этот порт маппится на порт 80 внутри контейнера
      - "8081:80"
    # Этому контейнеру не нужны никакие volumes, т.к. его конфиг запекается в образ на этапе `build`

volumes:
  postgres_data:
    name: engineering-hub_postgres_data
